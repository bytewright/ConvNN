import os
import subprocess
import time
import logging
import configargparse

caffe_path = '/home/ellerch/bin/caffe/'


def draw_job_net(net_path, output_file, caffe_python_path):
    print 'python {} {} {}'.format(os.path.join(caffe_python_path, 'draw_net.py'), net_path, output_file)
    # draw_net.py <netprototxt_filename> <out_img_filename>
    process = subprocess.Popen(['python',
                                os.path.join(caffe_python_path, 'draw_net.py'),
                                net_path,
                                output_file],
                               stdout=subprocess.PIPE,
                               stderr=subprocess.STDOUT)
    output = process.communicate()[0]
    returncode = process.returncode
    while returncode is None:
        time.sleep(2)
        returncode = process.returncode
    if returncode is not 0:
        logging.error('draw_net return code: ' + str(process.returncode))
        logging.error(output)
    else:
        logging.info('draw_net exited successfully (code {})'.format(returncode))
    return output


if __name__ == "__main__":

    configpath = os.path.join(os.path.dirname(__file__), 'config.ini')
    parser = configargparse.ArgParser(default_config_files=[configpath])
    parser.add_argument('--net_dir', help='path to reference test data, generated by caffe parse_log.py')
    # parser.set_defaults(DEBUG=True)
    args = parser.parse_args()

    nets_path = os.path.join(os.path.dirname(__file__), args.net_dir)
    print 'parsing nets from '+nets_path
    net_list = os.listdir(nets_path)
    for file_name in net_list:
        if os.path.isfile(os.path.join(nets_path, file_name)):
            if file_name.endswith('prototxt'):
                name = file_name.replace('.prototxt', '')
                draw_job_net(os.path.join(nets_path, file_name),
                             os.path.join(nets_path, name+'.png'),
                             os.path.join(caffe_path, 'python'))

